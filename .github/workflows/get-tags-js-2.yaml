name: Get Tags JS 2

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]

jobs:
  tags:
    runs-on: ubuntu-latest
    outputs:
      releases: ${{steps.getdata.outputs.releases}}
    steps:
      - name: Output current branch name & date
        # To use latest action, specify "release-master" instead of "v0.0.2"
        uses: satackey/action-js-inline@v0.0.2
        env:
          GITHUB_TOKEN: ${{ github.token }}
        id: getdata
        with:
          # Edit the following line to install packages required to run your script.
          required-packages: semver
          script: |
            const semver = require('semver')
            const github = require('@actions/github');
            const core = require('@actions/core');
            
            const octokit = github.getOctokit(process.env.GITHUB_TOKEN)

            const response = await octokit.rest.repos.listTags({
              owner: 'dersimn',
              repo: 'github-action-test'
            });
            
            const tags = response.data.map(t => t.name);
            console.log(tags);
            const releases = tags.filter(t => !semver.prerelease(t));
            console.log(releases);

            const highest1 = semver.maxSatisfying(releases, '1.x');
            console.log(highest1);
            const highest2 = semver.maxSatisfying(releases, '2.x');
            console.log(highest2);
            
            const clean = releases.map(r => semver.clean(r));
            console.log(clean);

            core.setOutput('releases', JSON.stringify(releases))
            
      - name: Get result
        run: echo '${{steps.getdata.outputs.releases}}'

  read:
    needs: [ tags ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        myrelease: ${{fromJSON(needs.tags.outputs.releases)}}
    steps:
      - run: |
          echo "${{ matrix.myrelease }}"
